" Absolute essentials
inoremap kj <Esc> 
colorscheme industry
let mapleader=" "
set encoding=utf-8
set clipboard=unnamed
set ruler
set number
set fileformat=unix
set scrolloff=7
set noswapfile


filetype plugin indent on
syntax on

nnoremap <silent> <Tab> >>
nnoremap <silent> <S-Tab> <<

" Replace single quote with double quote
nnoremap '' :s/'/"/g <C-M>
vnoremap '' :s/'/"/g <C-M>

" Paste over a visual selection by using the null buffer
vnoremap <leader>p "_dP

" Delete without cutting to the default buffer
nnoremap <leader>d "_d
vnoremap <leader>d "_d

" Split navigations
set splitbelow
set splitright
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Enable folding with spacebar
set foldmethod=indent
set foldlevel=99
"nnoremap <space> za

" Edit and source .vimrc
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>
nnoremap <leader>o :vsplit ~/Documents/Omelas/project<cr>

" Quote words
nnoremap <leader>" viw<esc>a"<esc>bi"<esc>lel
nnoremap <leader>' viw<esc>a'<esc>bi'<esc>lel
nnoremap <leader>` viw<esc>a`<esc>bi`<esc>lel

" Wrap in brackets
nnoremap <leader>] 0i[<C-c>A]<C-c>
nnoremap <leader>) 0i(<C-c>A)<C-c>
nnoremap <leader>} 0i{<C-c>A}<C-c>

" Underline current line
nnoremap <leader>- yypv$r-<esc>

" Flip content around an =
nnoremap <leader>= :s/\([^=]*\)\s\+=\s\+\([^;]*\)/\2 = \1

nnoremap <leader>rw <cmd>Ex<CR>

" Will make a better version of these...
:autocmd FileType javascript nnoremap <buffer> <localleader>c I//<esc>
:autocmd FileType python     nnoremap <buffer> <localleader>c I#<esc>

" Spellcheck markdown files
:autocmd FileType markdown set spell

filetype plugin indent on    " required

iabbrev adn and
iabbrev dfe def

" Hit tab after typing an HTML tag to close it.
inoremap ><Tab> ><Esc>?<[a-z]<CR>lyiwo</<C-r>"><Esc>O

"defaults for indentation
set shiftwidth=4
set tabstop=4
set softtabstop=4

"no more flash!
set vb t_vb=

set smartindent
set autowrite
set expandtab
set mouse=a
set nocompatible
set ofu=syntaxcomplete#Complete
set showmatch

" autosave when focus is lost
:au FocusLost * :wa
